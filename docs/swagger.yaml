openapi: 3.0.2
info:
  title: Films and Actors API
  version: 1.0.0
  description: API for managing films, actors, and their relationships.
paths:
  /movies:
    get:
      summary: Get all movies
      description: Returns a list of all movies.
      responses:
        '200':
          description: A list of movies.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    price:
                      type: number
                      format: float
    post:
      summary: Add a new movie
      description: Creates a new movie.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                price:
                  type: number
                  format: float
              required:
                - name
                - price
      responses:
        '201':
          description: Movie successfully created.
  /movies/{id}:
    get:
      summary: Get movie by ID
      description: Returns the details of a specific movie.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Movie details.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  price:
                    type: number
                    format: float
        '404':
          description: Movie not found.
    put:
      summary: Update a movie
      description: Updates the details of a specific movie.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                price:
                  type: number
                  format: float
      responses:
        '200':
          description: Movie updated.
    delete:
      summary: Delete a movie
      description: Deletes a specific movie.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Movie deleted.
        '404':
          description: Movie not found.
  /actors:
    get:
      summary: Get all actors
      description: Returns a list of all actors.
      responses:
        '200':
          description: A list of actors.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
    post:
      summary: Add a new actor
      description: Creates a new actor.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
                - name
      responses:
        '201':
          description: Actor successfully created.
  /movies/{id}/actors:
    get:
      summary: Get actors for a movie
      description: Returns a list of actors for a specific movie.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A list of actors for the movie.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
    post:
      summary: Add an actor to a movie
      description: Links an actor to a specific movie.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                actorId:
                  type: integer
              required:
                - actorId
      responses:
        '201':
          description: Actor linked to the movie.
    delete:
      summary: Remove an actor from a movie
      description: Removes the link between an actor and a specific movie.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: actorId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Actor unlinked from the movie.
