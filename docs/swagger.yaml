openapi: 3.0.2
info:
  title: Films API
  version: 1.0.0
  description: API Films and actors database
paths:
  /movies:
    get:
      summary: Get all movies
      description: Tagastab filmid
      tags:
        - movies
      responses:
        '200':
          description: Films list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Movie'
    post:
      summary: Add a new movie
      description: Create new film
      tags:
        - movies
      requestBody:
        description: Films data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewMovie'
      responses:
        '201':
          description: Film succesfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
  /movies/{id}:
    get:
      summary: Get movie by ID
      description: Tgastab film by id
      tags:
        - movies
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Film information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
        '404':
          description: Film puudub
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update a movie by ID
      description: Update film
      tags:
        - movies
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: New data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewMovie'
      responses:
        '200':
          description: Film succesfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
        '404':
          description: Film puudub
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete a movie by ID
      description: Delete film
      tags:
        - movies
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Film succesfully deleted
        '404':
          description: Film puudub
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /movies/{id}/actors:
    get:
      summary: Get actors of a movie
      description: Tagastab filmid by id
      tags:
        - actors
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Actors list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Actor'
        '404':
          description: Film puudub
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Movie:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        price:
          type: number
          format: float
    NewMovie:
      type: object
      properties:
        name:
          type: string
        price:
          type: number
          format: float
      required:
        - name
        - price
    Actor:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
    Error:
      type: object
      properties:
        error:
          type: string
      /movies/{id}/actors:
    post:
      summary: Add an actor to a movie
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '201':
          description: Actor added
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
        '404':
          description: Movie not found
    delete:
      summary: Delete an actor from a movie
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
        - in: path
          name: actorId
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Actor deleted
        '404':
          description: Movie or actor not found

